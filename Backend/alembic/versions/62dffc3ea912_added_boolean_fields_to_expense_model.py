"""Added Boolean fields to Expense model

Revision ID: 62dffc3ea912
Revises: 01344513844c
Create Date: 2025-03-11 18:58:02.410344

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '62dffc3ea912'
down_revision: Union[str, None] = '01344513844c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('expenses', 'is_recurring',
                type_=sa.Boolean(),
                existing_nullable=False,
                postgresql_using="is_recurring::BOOLEAN")  # âœ… Explicit conversion
    op.alter_column('expenses', 'is_installment',
                type_=sa.Boolean(),
                existing_nullable=False,
                postgresql_using="is_installment::BOOLEAN")
    op.drop_constraint('expenses_user_id_fkey', 'expenses', type_='foreignkey')
    op.create_foreign_key(None, 'expenses', 'users', ['user_id'], ['id'])
    op.drop_column('expenses', 'labels')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('expenses', sa.Column('labels', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.create_foreign_key('expenses_user_id_fkey', 'expenses', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('expenses', 'is_installment',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('expenses', 'is_recurring',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
